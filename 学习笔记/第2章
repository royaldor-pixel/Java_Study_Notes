2.1关键字和保留字(Keywords)
    关键字:专门用途的字符串
    class interface enum byte true false null...
    关键字均为小写
    保留字:现有的java版本尚未使用,以后可能会作为关键字使用,命名标识符时尽量避免
    goto const...

2.2标识符(Identifier)
    1.定义:对Java各种变量,方法,类等要素命名时使用的字符序列
    2.标识符的命名规则:
        >由英文字母大小写,0-9,_或$组成
        >不可以使用关键字和保留字,但可以包含关键字和保留字
        >Java中严格区分大小写,长度无限制
        >标识符不能包含空格
    3.Java命名规范
        >包名:多单词组成时所有字母都小写:xxxyyyzzz
        >类名/接口名:多单词组成时,所有单词的首字母大写:XxxYyyZzz(大驼峰)
        >变量名/方法名:多单词组成时,第一个单词首字母小写,第二个单词开始每个单词首字母大写:xxxYyyZzz(小驼峰)
        >常量名:所有字母都大写,多单词时每个单词用下划线链接:XXX_YYY_ZZZ

2.3变量
    1.注意事项
        >先声明,再使用
        >变量是程序中最基本的存储单元,包含变量类型,变量名和存储的值
        >变量都定义在其作用域内,在作用域内有效
        >同一个作用域内,不可以定义两个同名的变量
    2.变量的分类
    按数据类型分:
        基本数据类型
            整形:byte/short/int/long
            浮点型:float/double
            字符型:char
            布尔型:boolean
        引用数据类型
            类(class)
            接口(interface)
            数组(array)
    按变量在类中的声明位置分(详见第四章):
        成员变量:
            实例变量(不以static修饰)
            类变量(以static修饰)
        局部变量:
            形参
            方法局部变量
            代码块局部变量
        1st.整形
            1Byte(字节) = 8bit
            byte    1字节     -128~127
            short   2字节     -2^15~2^15-1
            int     4字节     -2^31~2^31-1
            long    8字节     -2^63~2^63-1
            (1)声明long型变量,必须以"l"或"L结尾"
            (2)通常定义整形变量时,使用int型
        2nd.浮点型
            float   单精度     尾数精确到7位
            double  双精度     尾数精确到14位
            java的浮点类型默认为 double 型
            (1)float标识数值范围比 long 大
            (2)定义float类型变量时要以"f"或"F"结尾
            (3)通常定义浮点型变量时,使用 double 型
        3rd.字符型
            char    2字节
            (1)定义char型变量,通常使用一对'' char c1 = 'a';
            (2)表示方式
            >声明一个字符
            >转义字符'\n','\t'
            >直接使用Unicode值来表示字符型常量
        4th.布尔型
            boolean
            (1)只能取两个值之一:true false
            (2)常常在条件判断/循环结构中使用
        5th.String型
            String
            (1)引用数据类型,翻译为:字符串
            (2)声明 String 类型变量时,使用一对" "
            (3) String 可以和8种基本数据类型做运算,且只能做连接运算
    3.基本数据类型之间的规则:
        1st.自动类型提升:
            容量小的数据类型的变量与容量大的数据类型的变量做运算时,结果自动提升为容量大的数据类型
            byte --> short --> int --> long --> float --> double
            特别的,byte,short,char,任意两个或以上相加均为int型
        2nd.强势类型转换:
            自动类型提升的逆运算
            (1)需要使用强转符
            (2)使用强制类型转换,可能导致精度损失
            整形常量默认为 int 型,浮点型变量默认为 double 型

2.4运算符
    1.赋值运算符(详见百度)
    2.逻辑运算符(同上)
    3.三元运算符
        1st.结构:(条件表达式)?表达式1:表达式2
        2nd.说明
            >条件表达式的结果是 boolean 类型
            >根据条件表达式的真或假,决定执行表达式1,还是表达式2
            >如果表达式为 true ,则执行表达式1
            >如果表达式为 false ,则执行表达式2
        3rd.表达式1和表达式2要求是一致的(可以统一为整形或浮点型)
        4th.三元运算符可以嵌套使用
        5th.凡是可以用三元运算符的地方,都可以改写为 if-else 反之不成立
        6th.如果程序既可以使用三元运算符,又可以使用 if-else 则建议使用三元运算符

2.5程序流程控制
    顺序结构
    分支结构
        1.if-else 的三种结构
            >if(条件表达式){
                执行表达式
            }

            >if(条件表达式1){
                执行表达式1
            }
            else if(条件表达式2){
                执行表达式2
            }
            else if(条件表达式3){
                执行表达式3
            }
            else{
                执行表达式4
            }
      范围小的设计在范围大的上面
    循环结构
    从键盘中获取不同的变量:需要使用scanner类
    具体实现步骤:
    1.导包 import java.util.Scanner
    2.scanner的实例化:Scanner scan = new Scanner(System in)
    3.调用scanner类的相关方法(next/nextXXX),来获取指定类型的变量
    import java.util.Scanner
    class ScannerTest{
        public static void main(String []args){
            Scanner scan = new Scanner(System.in)
        }
    }

